// 수포자는 수학을 포기한 사람의 준말입니다. 
// 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 
// 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.

// 1번 수포자가 찍는 방식: 
// 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
// 2번 수포자가 찍는 방식: 
// 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
// 3번 수포자가 찍는 방식: 
// 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...

// 1번 문제부터 마지막 문제까지의 
// 정답이 순서대로 들은 배열 answers가 주어졌을 때, 
// 가장 많은 문제를 맞힌 사람이 누구인지 
// 배열에 담아 return 하도록 solution 함수를 작성해주세요.

// 제한 조건
// 시험은 최대 10,000 문제로 구성되어있습니다.
// 문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
// 가장 높은 점수를 받은 사람이 여럿일 경우, 
// return하는 값을 오름차순 정렬해주세요.

// 입출력 예
// answers	    return
// [1,2,3,4,5]	[1]
// [1,3,2,4,2]	[1,2,3]

// 1번 [1,2,3,4,5]반복
// 2번 [2,1,2,3,2,4,2,5]반복
// 3번 [3,3,1,1,2,2,4,4,5,5]반복


const answer = [1,2,3,4,5];
const num1 = [1,2,3,4,5];
const num2 = [2,1,2,3,2,4,2,5];
const num3 = [3,3,1,1,2,2,4,4,5,5];
let count = [0,0,0]


for(let i = 0; i<answer.length; i++) {
    //나머지값으로 나눠서 답안과 찍은개수 보완하기
    if(answer[i] === num1[i % num1.length]) 
    count[0]++;
    if(answer[i] === num2[i % num2.length])
    count[1]++;
    if(answer[i] === num3[i % num3.length])
    count[2]++;
}
//최대값 구해서 그 배열순서를 그대로 유지하면서 배열에 넣기 배열의 인덱스+1하면 
//1,2,3 중에 하나를 넣을수있음
const max = Math.max(count[0], count[1], count[3]);
for(let i=0; i<count.length; i++){
    if(max === count[i]) answer.push(i+1);
}